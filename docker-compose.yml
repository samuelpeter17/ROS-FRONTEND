version: '3'
services:
  ros:
    build: .  # Assuming you have a Dockerfile for the ROS setup
    command: /root/start_ros_flask.sh  # Run the script to start roscore and Flask app
    volumes:
      - ./workspace:/root/catkin_ws/  # Bind mount your workspace
    environment:
      - DISPLAY=novnc:0.0  # Display for the frontend (x11)
    env_file:
      - ros.env
    networks:
      - my-net
    ports:
      - "5002:5002"  # Expose Flask API port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/publish_message"]
      interval: 30s
      retries: 3
      start_period: 30s  # Give extra time for Flask to initialize
      timeout: 10s


  frontend:
    build: ./frontend  # Path to the Dockerfile for the frontend (adjust if needed)
    ports:
      - "5001:80"  # Expose frontend port 80 on host port 5001
    networks:
      - my-net  # Ensure both frontend and ros are on the same network
    depends_on:
      - ros  # Wait for ROS service to be ready
    command: nginx -g 'daemon off;'  # Start nginx for the frontend

  novnc:
    image: theasp/novnc:latest
    ports:
      - "8080:8080"  # Expose noVNC port
    networks:
      - my-net
    depends_on:
      - ros
    env_file:
      - novnc.env

networks:
  my-net:  # Create a new network for ROS and frontend communication
    driver: bridge
